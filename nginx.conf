user www www;
worker_processes auto;
worker_cpu_affinity  auto;

worker_rlimit_nofile 40000;
pid /var/run/tengine.pid;
error_log /srv/tengine/logs/error.log;

dso
{
	load ngx_http_footer_filter_module.so;
	load ngx_http_limit_conn_module.so;
	load ngx_http_limit_req_module.so;
	load ngx_http_sysguard_module.so;
	load ngx_http_upstream_ip_hash_module.so;
	load ngx_http_upstream_least_conn_module.so;
	load ngx_http_upstream_session_sticky_module.so;
	load ngx_http_lua_module.so;
}

events
{
	use epoll;
	worker_connections 51200;
}

http
{
	include mime.types;
	server_info off;
	server_tag off;
	server_tokens off;
	sendfile on;
	tcp_nopush on;
	keepalive_timeout 65;
	client_header_buffer_size 32k;
	large_client_header_buffers 1024 64k;

	log_format nginx_custom_log '[$time_local] $msec $request_time $remote_addr $upstream_cache_status/$status $bytes_sent $request_method http://$host$request_uri - DIRECT/$upstream_addr $upstream_http_content_type "$http_referer" "$http_user_agent"';
	log_format default '$msec $request_time $remote_addr $status $request_method http://$host$request_uri "$http_user_agent"';
	access_log /srv/tengine/logs/access.log nginx_custom_log;

	proxy_connect_timeout 60;
	proxy_read_timeout 60;
	proxy_send_timeout 10;
	proxy_buffer_size 16k;
	proxy_buffers  4 32k;
	proxy_busy_buffers_size 64k;
	proxy_temp_file_write_size 64k;
	proxy_pass_header Date;
	proxy_pass_header Server;

	#proxy_cache_use_stale updating;
	#proxy_cache_key "$host$uri$is_args$args";
	#proxy_cache_path /memcache/default.cac levels=1:2 keys_zone=default:64m max_size=1g inactive=24h;

################### default server always a jail ############################
server
  {
    listen 80;
    server_name _;
    #access_log /srv/tengine/logs/access_nginx.log combined;
    #root /data/www/default;
    index index.html index.php;
    location = /tengine-status {
	    stub_status on;
	    access_log   off;
    }
     location = /lua-version {
	 content_by_lua '
		 if jit then
			 ngx.say(jit.version)
		     else
			 ngx.say(_VERSION)
		 end
		';
     }
  }

##########################vhost(upstreams)#################################
#include upstream.conf;
#include up/*.conf
}
